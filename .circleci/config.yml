version: 2.1
orbs:
  node: circleci/node@5.0.2
  eb: circleci/aws-elastic-beanstalk@2.0.1
  aws-cli: circleci/aws-cli@3.1.1
jobs:
  build:
    docker:
      - image: "cimg/node:14.15"
    steps:
      - node/install:
          node-version: '14.15'         
      - checkout
      - aws-cli/setup
      - run:
          name: Install Front-End Dependencies
          command: |
            npm run frontend:install
      - run:
          name: Install API Dependencies
          command: |
            npm run api:install
      # TODO: Lint the frontend
      - run:
          name: Front-End Lint
          command: |
          
      # TODO: Build the frontend app
      - run:
          name: Front-End Build
          command: |
            npm run frontend:build
      - run:
          name: Front-End Deploy
          command: |
            npm run frontend:deploy
            aws s3 cp --recursive --acl public-read ./www $ward-udagram

      # TODO: Build the backend API      
      - run:
          name: API Build
          command: |
            npm run api:build
            printenv > www/.env
            npm run archive
  # deploy step will run only after manual approval
  deploy:
    docker:
      - image: "cimg/base:stable"
      # more setup needed for aws, node, elastic beanstalk
    steps:
      - node/install:
          node-version: '14.15' 
      - eb/setup
      - aws-cli/setup
      - checkout
      - run:
          name: Install AWS EB
          command: |
            npm run api:aws-eb
      - run:
          name: Deploy App
          command: |
            aws s3 cp ./www/Archive.zip $ward-udagram
            aws elasticbeanstalk create-application-version --application-name $APP_EB --version-label <<pipeline.git.revision>> --source-bundle S3Bucket="$bucket_Eb",S3Key="Archive.zip"
            aws elasticbeanstalk update-environment --application-name $APP_EB --environment-name $env_eb --version-label <<pipeline.git.revision>>
workflows:
  udagram:
    jobs:
      - build
      - deploy
      - hold:
          filters:
            branches:
              only:
                - master
          type: approval
          requires:
            - build
      - deploy:
          requires:
            - hold
